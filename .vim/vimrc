" ~/.vim/vimrc

language messages C

if empty(&termencoding)
  let &termencoding = exists('$MSYSTEM') ? 'cp1251' : &encoding
endif
set encoding=utf-8

let &fileencodings = 'ucs-bom,utf-8,' .
      \ (has('win32') || has('win32unix') ? 'cp1251' : 'koi8-r')

set pastetoggle=<F2>

set incsearch
set ignorecase
set smartcase

set tags=./tags;
set showfulltag
set cscopetag
set cscopeverbose
set cscopequickfix=c-,d-,e-,i-,s-,t-

set scrolloff=1
if has('patch-7.4.338')
  set breakindent
  set breakindentopt=sbr
endif
set showbreak=+
set sidescrolloff=5
set display=lastline
set cmdheight=2
set listchars=eol:$,tab:>-,trail:-,extends:>,precedes:<,nbsp:%

if &term =~ '^screen'
  set background=dark
endif
set hlsearch
set spelllang=en_us,ru_yo
set spellsuggest=fast,10

set laststatus=2
set statusline=%<%.25f%(\ [%H%M%R%{FugitiveStatusline()}]%)%=%-14.(%l,%c%V%)\ %P

set tabpagemax=25

if !has('gui_running')
  set notitle
endif

set mouse=ar

set shortmess+=I
set showcmd
set visualbell t_vb=

set backspace=indent,eol,start
if has('patch-7.3.541')
  set formatoptions+=j
endif
set complete-=i
set completeopt=menuone
set infercase
set showmatch
set nrformats-=octal

set autoindent

set foldopen+=jump

set diffopt=filler,context:4

set ttimeout
set ttimeoutlen=100

set modeline
set autowrite
set autoread

set history=200
set wildmode=longest,full
set wildmenu

if has('unix')
  set grepprg=grep\ -Hn\ $*\ /dev/null
endif

set keymap=russian-jcukenwin
set iminsert=0
set imsearch=-1

set virtualedit=block
set sessionoptions-=blank sessionoptions-=options sessionoptions+=slash,unix
set viminfo=!,'20,<50,s10,h

silent! execute pathogen#infect()

syntax on
filetype plugin indent on

highlight link SneakPluginTarget IncSearch

let g:ack_default_options = ' -H --column --smart-case --sort-files'

let g:ctrlp_map = '<Leader>P'
let g:ctrlp_by_filename = 1
let g:ctrlp_user_command = ['.git', 'git --git-dir=%s/.git ls-files']

let g:user_emmet_leader_key = '<C-\>'

let g:netrw_banner = 0
let g:netrw_liststyle = 1
let g:netrw_timefmt = '%a %d %b %Y %H:%M:%S'

let g:paredit_leader = '\'

let g:slimv_preferred = 'clisp'
let g:slimv_leader = '\'

let g:sneak#s_next = 1
let g:sneak#map_netrw = 0

let g:surround_{char2nr('c')} = "/* \r */"

let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0
let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1

let g:tagbar_compact = 1
let g:tagbar_indent = 1
let g:tagbar_show_linenumbers = 2
let g:tagbar_iconchars = ['+', '-']

let g:tern_show_signature_in_pum = 1

let g:vdebug_options = {
      \ 'watch_window_style': 'compact',
      \ 'marker_default': '*',
      \ 'marker_closed_tree': '+',
      \ 'marker_open_tree': '-',
      \ 'continuous_mode': 1
      \ }

let g:c_gnu = 1
let g:c_no_curly_error = 1
let g:c_syntax_for_h = 1
let g:c_no_comment_fold = 1

let g:html_exclude_tags = ['html', 'script', 'style']
let g:html_no_rendering = 1

let g:perl_string_as_statement = 1
let g:perl_fold = 1

let g:php_folding = 1

let g:ruby_fold = 1
let g:ruby_no_comment_fold = 1

let g:is_posix = 1
let g:sh_fold_enabled = 3

let g:tex_flavor = 'latex'

inoremap <C-U> <C-G>u<C-U>
nnoremap <silent> <C-L> :nohlsearch<CR><C-L>

nnoremap j gj
nnoremap k gk
nnoremap gj j
nnoremap gk k

nmap + <C-W>+
nmap _ <C-W>-

nmap cX <Plug>(ExchangeClear)

nmap <silent> <Leader>E :Explore<CR>
nmap <silent> <Leader>S :execute 'mksession!' v:this_session<CR>
nmap <silent> <Leader>T :TagbarOpenAutoClose<CR>

map! <F3> <C-^>

if exists('#fedora')
  autocmd! fedora BufReadPost *
elseif exists('#redhat')
  autocmd! redhat BufReadPost *
endif

augroup cursorline
  autocmd!
  autocmd WinEnter * call CursorlineRestore()
  autocmd WinLeave * call CursorlineDisable()
augroup END

function! CursorlineDisable()
  let w:cursorline_save = &l:cursorline
  setlocal nocursorline
endfunction

function! CursorlineRestore()
  if exists('w:cursorline_save')
    let &l:cursorline = w:cursorline_save
  endif
endfunction

function! FugitiveStatusline()
  return exists('g:loaded_fugitive') ? fugitive#statusline() : ''
endfunction

runtime macros/matchit.vim

" vim:set shiftwidth=2:
