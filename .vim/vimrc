" ~/.vim/vimrc

runtime bundle/pathogen/autoload/pathogen.vim
silent! execute pathogen#infect()

language messages C

if empty(&termencoding)
  let &termencoding = exists('$MSYSTEM') ? 'cp1251' : &encoding
endif
set encoding=utf-8
set fileencodings=ucs-bom,utf-8,cp1251

set pastetoggle=<F2>

set incsearch
set ignorecase
set smartcase

set tags=./tags;,tags
set showfulltag

set scrolloff=1
if has('patch-7.4.338')
  set breakindent
  set breakindentopt=sbr
endif
set showbreak=+
set sidescrolloff=5
set display=lastline
set cmdheight=2
set listchars=eol:$,tab:>-,trail:-,extends:>,precedes:<,nbsp:%

set background=dark
set hlsearch
set spelllang=en_us,ru_yo
set spellsuggest=fast,10

set laststatus=2
set statusline=%<%.20f\ (%n)%(\ [%H%M%R%W%{S('fugitive#statusline')}%{S('SyntasticStatuslineFlag')}]%)%=%-14.(%l,%c%V%)\ %P

set notitle

if has('mouse')
  set mouse=a
endif

set shortmess+=I
set showcmd
set visualbell t_vb=

set backspace=indent,eol,start
if has('patch-7.3.541')
  set formatoptions+=j
endif
set complete-=i complete-=t
set completeopt=menuone
set infercase
set showmatch
set nrformats-=octal

set shiftwidth=4
set softtabstop=4
set expandtab
set autoindent

if has('folding')
  set foldopen+=jump
endif

set timeoutlen=3000
set ttimeoutlen=100

set modeline
set autowrite
set autoread

set history=200
set wildmode=longest:full,full
set wildmenu

set keymap=russian-jcukenwin
set iminsert=0
set imsearch=-1

set virtualedit=block
set sessionoptions-=blank sessionoptions-=options sessionoptions+=slash,unix
set viminfo=!,'20,<50,s10,h

syntax on
filetype plugin indent on

let g:ack_default_options = ' -H --column --smart-case --sort-files'

let g:ctrlp_map = '<Leader>p'
let g:ctrlp_lazy_update = 1

let g:user_emmet_leader_key = '<C-\>'

let g:netrw_bufsettings = 'noma nomod nonu nobl nowrap ro rnu'
let g:netrw_liststyle = 1
let g:netrw_timefmt = '%a %d %b %Y %H:%M:%S'

let g:sneak#s_next = 1
let g:sneak#map_netrw = 0

let g:syntastic_stl_format = ',SYN(%t)'

let g:tern#command = ['tern', '--no-port-file']
let g:tern_show_signature_in_pum = 1

let g:vdebug_options = {
      \ 'watch_window_style': 'compact',
      \ 'marker_default': '*',
      \ 'marker_closed_tree': '+',
      \ 'marker_open_tree': '-',
      \ 'continuous_mode': 1,
      \ }

let g:c_gnu = 1
let g:c_no_curly_error = 1
let g:c_syntax_for_h = 1
let g:c_no_comment_fold = 1

let g:go_highlight_trailing_whitespace_error = 0
if executable('goimports')
  let g:gofmt_command = 'goimports'
endif

let g:html_exclude_tags = ['html', 'script', 'style']
let g:html_no_rendering = 1

let g:perl_string_as_statement = 1
let g:perl_fold = 1

let g:php_folding = 1

let g:is_posix = 1
let g:sh_fold_enabled = 3

if has('digraphs')
  digraphs ./ 8230  " HORIZONTAL ELLIPSIS U+2026
endif

inoremap <C-U> <C-G>u<C-U>
nnoremap <silent> <C-L> :nohlsearch<CR><C-L>

nnoremap gj j
nnoremap j gj

nnoremap gk k
nnoremap k gk

map! <F3> <C-^>

nmap <Leader>s :mksession! <C-R>=fnameescape(v:this_session)<CR><CR>
nmap <Leader>y :syntax <C-R>=exists('g:syntax_on') ? 'off' : 'enable'<CR><CR>

nmap <Leader>e :Errors<CR>

if exists('#fedora')
  autocmd! fedora BufReadPost *
endif

function! S(funcname)
  return exists('*' . a:funcname) ? call(a:funcname, []) : ''
endfunction

runtime macros/matchit.vim
