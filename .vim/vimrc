" ~/.vim/vimrc

let $MYVIM = expand('$HOME/.vim')

runtime bundle/pathogen/autoload/pathogen.vim
silent! execute pathogen#infect('local/bundle/{}', 'bundle/{}')

set fileencodings=ucs-bom,utf-8,koi8-r

set cpoptions-=a cpoptions-=A

set incsearch
set ignorecase smartcase

set tags=./tags;,tags
set nocscopetag

set scrolloff=1
if has#('patch-7.4.338')
  set breakindent breakindentopt=sbr
endif
set showbreak=+
set sidescroll=1 sidescrolloff=5
set display=lastline
set cmdheight=2
set lazyredraw
set listchars=eol:$,tab:>-,trail:~,extends:>,precedes:<

set hlsearch
set spelllang=en_us,ru_yo

set laststatus=2
set statusline=%n\ %<%.20f\ %h%m%r%{statusline#Flags()}%=%-14.(%l,%c%V%)\ %P

set tabline=%!tabline#()

set notitle

set noshowcmd
if has#('patch-8.1.1270')
  set shortmess-=S
endif
set confirm
set visualbell t_vb=

set undofile undodir=$MYVIM/undo
set backspace=indent,eol,start
set formatoptions+=l1
if has#('patch-7.3.541')
  set formatoptions+=j
endif
set complete-=i complete-=t
set completeopt-=preview
set nrformats-=octal

set shiftwidth=4 softtabstop=4
set expandtab
set autoindent
set lispwords-=if

set nomodeline
if has#('patch-7.4.785')
  set nofixendofline
endif
set autowrite
set autoread

set history=1000
set wildmenu
set wildmode=longest:full,full
set wildoptions=tagfile

if executable('ack')
  set grepprg=ack\ --with-filename\ --column
  set grepformat^=%f:%l:%c:%m
endif

set keymap=russian
set iminsert=0 imsearch=-1

set virtualedit=block
set sessionoptions-=options
set viewoptions-=options
set viminfo=!,'100,<50,s10,h,n$MYVIM/.viminfo

filetype plugin indent on

if !exists('g:syntax_on')
  syntax enable
endif

colorscheme mine

let g:statusline#flags =
    \ ['FugitiveStatusline', 'ALEStatuslineFlag', 'SyntasticStatuslineFlag']

let g:ale_lint_on_text_changed = 'normal'
let g:ale_lint_on_insert_leave = 1

let g:user_emmet_leader_key = '<C-\>'

let g:lion_squeeze_spaces = 1

let g:netrw_bufsettings = 'noma nomod nonu nobl nowrap ro rnu'
let g:netrw_banner      = 0
let g:netrw_list_hide   = '\v\C%(\~|\.swp)\*?$'
let g:netrw_timefmt     = '%a %d %b %Y %H:%M:%S'

let g:sneak#map_netrw = 0

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_check_on_wq = 0
let g:syntastic_stl_format  = '[!]'

let g:vdebug_options = {}
let g:vdebug_options.watch_window_style = 'compact'
let g:vdebug_options.marker_default     = '*'
let g:vdebug_options.marker_closed_tree = '+'
let g:vdebug_options.marker_open_tree   = '-'
let g:vdebug_options.sign_breakpoint    = 'B>'
let g:vdebug_options.sign_current       = '->'
let g:vdebug_options.continuous_mode    = 1
let g:vdebug_options.simplified_status  = 0

if has#('digraphs')
  " HORIZONTAL ELLIPSIS.
  digraphs ,. 8230
endif

let g:mapleader = ','

nmap <Leader>,  <Plug>Sneak_,
omap <Leader>,  <Plug>Sneak_,
xmap <Leader>,  <Plug>Sneak_,

" Just for the case when Sneak isn't installed ...
nnoremap <Plug>Sneak_,  ,
onoremap <Plug>Sneak_,  ,
xnoremap <Plug>Sneak_,  ,

cnoremap <C-X>n  <Down>
cnoremap <C-X>p  <Up>

inoremap <C-U>  <C-G>u<C-U>
inoremap <C-W>  <C-G>u<C-W>

nnoremap +  <C-W>+
nnoremap _  <C-W>-

nnoremap -  :Explore<CR>

nnoremap <BS>  <C-^>

nnoremap <Space>  <C-F>

nnoremap <C-J>  gT
nnoremap <C-K>  gt

nnoremap <silent> <C-L>  :nohlsearch<CR><C-L>

nnoremap Q  @q

nnoremap <expr> j  v:count ? 'j' : 'gj'
nnoremap <expr> k  v:count ? 'k' : 'gk'

nnoremap <Leader>m  :marks<CR>
nnoremap <Leader>r  :registers<CR>

nnoremap <Leader>tt  :TestNearest<CR>
nnoremap <Leader>tf  :TestFile<CR>
nnoremap <Leader>ts  :TestSuite<CR>
nnoremap <Leader>tl  :TestLast<CR>
nnoremap <Leader>tg  :TestVisit<CR>


" Toggle 'paste' only in Insert mode.
set pastetoggle=<C-_>
noremap <C-_>  <Nop>

augroup vimrc_paste
  autocmd!
  autocmd InsertLeave *  set nopaste
augroup END

augroup vimrc_undofile
  autocmd!
  autocmd BufWritePre {,/usr,/var}/tmp/*  setlocal noundofile
augroup END

if exists('#fedora')
  autocmd! fedora BufReadPost *
endif

runtime local/vimrc
